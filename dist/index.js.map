{"version":3,"file":"index.js","sources":["../src/context.js","../src/form.js","../src/checkbox.js","../src/item.js"],"sourcesContent":["import React from \"react\";\nexport const Context = React.createContext();\n","import React from \"react\";\nimport set from \"lodash/set\";\nimport forEach from \"lodash/forEach\";\nimport { Context } from \"./context\";\n\nexport const form = settings => {\n  const initForm = {};\n  forEach(settings, ({ field, defaultValue = null }) => {\n    set(initForm, field, defaultValue);\n  });\n  return WrapperdComponent =>\n    class extends React.Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n          form: initForm || {}\n        };\n      }\n      resetFields = (form, depField, depValue) => {\n        forEach(settings, ({ dep, field, defaultValue = null }) => {\n          if (dep && dep.field === depField && dep.value !== depValue) {\n            set(form, field, defaultValue);\n            this.resetFields(form, field, defaultValue);\n          }\n        });\n      };\n      onChange = (field, value) => {\n        const form = this.state.form;\n        set(form, field, value);\n        this.resetFields(form, field, value);\n        this.setState({ form });\n      };\n      render() {\n        const context = {\n          settings,\n          form: this.state.form,\n          onChange: this.onChange\n        };\n        return (\n          <Context.Provider value={context}>\n            <WrapperdComponent {...this.props} />\n          </Context.Provider>\n        );\n      }\n    };\n};\n","import React, { Fragment } from \"react\";\nimport includes from \"lodash/includes\";\nimport pull from \"lodash/pull\";\nimport map from \"lodash/map\";\nimport { Context } from \"./context\";\n\nexport class CheckBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value || props.defaultValue || []\n    };\n  }\n  onChange = value => {\n    const onChange = this.context.onChange;\n    let stateValue = this.state.value;\n    if (includes(stateValue, value)) {\n      stateValue = pull(stateValue, value);\n    } else {\n      stateValue = [...stateValue, value];\n    }\n    this.setState({ value: stateValue }, () => {\n      onChange(this.props.field, this.state.value);\n    });\n  };\n  render() {\n    const { options, field, value: fieldValue } = this.props;\n    return (\n      <Fragment>\n        {map(options, ({ text, value }) => {\n          return (\n            <span key={value}>\n              <input\n                type=\"checkbox\"\n                name={field}\n                value={value}\n                checked={includes(fieldValue, value)}\n                onChange={() => this.onChange(value)}\n              />\n              <span>{text}</span>\n            </span>\n          );\n        })}\n      </Fragment>\n    );\n  }\n}\n\nCheckBox.contextType = Context;\n","import React, { Fragment } from \"react\";\nimport { includes, map, get, find, isEqual, isFunction } from \"lodash\";\nimport { Context } from \"./context.js\";\nimport { CheckBox } from \"./checkbox.js\";\nconst multiTypes = [\"radio\", \"checkbox\"];\n\nexport class Item extends React.Component {\n  render() {\n    const { field: name } = this.props;\n    const { form, settings, onChange } = this.context;\n\n    const setting = find(settings, { field: name });\n    const { dep, field, type, options } = setting;\n    if (dep) {\n      let satisfy = false;\n      const depValue = get(form, dep.field);\n      if (isFunction(dep.value)) {\n        satisfy = dep.value(depValue);\n      } else if (isEqual(depValue, dep.value)) {\n        satisfy = true;\n      }\n      if (!satisfy) return null;\n    }\n    if (includes(multiTypes, type)) {\n      const fieldValue = get(form, field);\n      if (type === \"checkbox\") {\n        return <CheckBox {...this.props} {...setting} value={fieldValue} />;\n      }\n      return (\n        <Fragment>\n          {map(options, ({ text, value }) => {\n            return (\n              <span key={value}>\n                <input\n                  type={type}\n                  name={field}\n                  value={value}\n                  checked={fieldValue === value}\n                  onChange={e => onChange(field, value)}\n                />\n                <span>{text}</span>\n              </span>\n            );\n          })}\n        </Fragment>\n      );\n    }\n    return (\n      <input type={type} onChange={e => form.onChange(field, e.target.value)} />\n    );\n  }\n}\n\nItem.contextType = Context;\n"],"names":["Context","React","createContext","form","initForm","settings","field","defaultValue","props","resetFields","depField","depValue","dep","value","onChange","state","setState","context","Component","CheckBox","stateValue","includes","pull","options","fieldValue","text","contextType","multiTypes","Item","name","setting","find","type","satisfy","get","isFunction","isEqual","e","target"],"mappings":"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"}