{"version":3,"file":"index.es.js","sources":["../src/context.js","../src/utils.js","../src/form.js","../src/dyform.js","../src/item.js"],"sourcesContent":["import React from 'react'\n\nconst Context = React.createContext({\n  values: {},\n  schema: null,\n})\nContext.displayName = 'DynamicForm'\nexport default Context\n","import isEqual from 'lodash/isEqual'\nimport isFunction from 'lodash/isFunction'\nimport get from 'lodash/get'\nimport isEmpty from 'lodash/isEmpty'\nimport forEach from 'lodash/forEach'\nimport pick from 'lodash/pick'\nimport set from 'lodash/set'\n\nexport const compare = (form, dep) => {\n  const depValue = get(form, dep.field)\n  if (isFunction(dep.pattern)) {\n    return dep.pattern(depValue, form)\n  }\n  return isEqual(depValue, dep.pattern)\n}\n\nexport const getInitialValue = schema => {\n  if (!schema) throw Error('must provide schema')\n  if (isEmpty(schema.fields)) throw Error('fields cannot be empty!')\n  const values = {}\n  forEach(schema.fields, ({ field, decorator }) => {\n    const initialValue = get(decorator, 'initialValue')\n    if (typeof initialValue !== 'undefined') set(values, field, initialValue)\n  })\n  return values\n}\n\nexport const digValues = changedFields => {\n  let result = []\n  forEach(changedFields, val => {\n    if (val.name) {\n      result.push(val)\n    } else {\n      result = [...result, ...digValues(val)]\n    }\n  })\n  return result\n}\n","import { Form } from 'antd'\nimport set from 'lodash/set'\nimport get from 'lodash/get'\nimport forEach from 'lodash/forEach'\n\nexport default Form.create({\n  mapPropsToFields({ schema, fields }) {\n    const result = {}\n    forEach(schema.fields, ({ field }) => {\n      const value = get(fields, field)\n      set(result, field, Form.createFormField(value))\n    })\n    return result\n  },\n  onFieldsChange(props, values) {\n    props.onChange && props.onChange(values)\n  },\n})\n","import React from 'react'\nimport Context from './context'\nimport flowRight from 'lodash/flowRight'\nimport cloneDeep from 'lodash/cloneDeep'\nimport forEach from 'lodash/forEach'\nimport set from 'lodash/set'\nimport get from 'lodash/get'\nimport { getInitialValue, digValues } from './utils'\nimport antform from './form'\n\nconst stateHolder = schema => {\n  const initialValue = getInitialValue(schema)\n  return WrapperdComponent =>\n    class StateHolder extends React.Component {\n      constructor(props) {\n        super(props)\n        this.state = {\n          formValues: initialValue,\n          fields: initialValue,\n          schema,\n          setForm: this.setForm,\n        }\n      }\n      resetFields = (form, fields, depField, depValue) => {\n        const schemaFields = schema.fields\n        forEach(schemaFields, ({ dep, field, decorator }) => {\n          if (dep && dep.field === depField && dep.value !== depValue) {\n            const initialValue = get(decorator, 'initialValue', null)\n            set(form, field, initialValue)\n            set(fields, `${field}`, initialValue)\n            this.resetFields(form, fields, field, initialValue)\n          }\n        })\n      }\n      onChange = changedFields => {\n        const values = digValues(changedFields)\n\n        const formValues = cloneDeep(this.state.formValues)\n        const fields = cloneDeep(this.state.fields)\n        forEach(values, field => {\n          const { name, value } = field\n          set(formValues, name, value)\n          set(fields, name, field)\n          this.resetFields(formValues, fields, name, value)\n        })\n        console.log('formValues', formValues)\n        console.log('fields', fields)\n        this.setState({ formValues, fields })\n      }\n      setForm = form => this.setState({ form })\n      render() {\n        return (\n          <Context.Provider value={this.state}>\n            <WrapperdComponent\n              {...this.props}\n              {...this.state}\n              onChange={this.onChange}\n            />\n          </Context.Provider>\n        )\n      }\n    }\n}\n\nconst formSetter = WrapperdComponent => {\n  class FormSetter extends React.PureComponent {\n    render() {\n      if (this.props.form && !this.context.form) {\n        this.context.setForm(this.props.form)\n        return null\n      }\n      return <WrapperdComponent {...this.props} />\n    }\n  }\n  FormSetter.contextType = Context\n  return FormSetter\n}\n\nexport const dyform = schema =>\n  flowRight(stateHolder(schema), antform, formSetter)\n","import React from 'react'\nimport { get, find, isEmpty, map } from 'lodash'\nimport * as Antd from 'antd'\nimport Context from './context'\nimport { compare } from './utils'\n\nconst DataComponents = {\n  Antd,\n}\n\nexport class Item extends React.Component {\n  static contextType = Context\n  render() {\n    return (\n      <Context.Consumer>\n        {({ formValues, schema, form }) => {\n          const { field, children: ChildElement } = this.props\n          const fieldSetting = find(schema.fields, { field })\n          const { dep, propsForItem = {}, decorator, children } = fieldSetting\n          if (dep && !compare(formValues, dep)) {\n            return null\n          }\n          let Component\n          if (React.isValidElement(ChildElement)) {\n            Component = ChildElement\n          } else if (children) {\n            const {\n              component,\n              props: childProps,\n              optionComponent,\n              options,\n            } = children\n            Component = get(DataComponents, component || null)\n            if (Component) {\n              if (!isEmpty(options) && !optionComponent) {\n                throw new Error(\n                  `\"${field}\" options specified, but optionComponent NOT`\n                )\n              }\n              if (!!optionComponent && isEmpty(options)) {\n                throw new Error(\n                  `\"${field}\" optionComponent specified, but options is empty`\n                )\n              }\n              const Option = get(DataComponents, optionComponent)\n              if (!Option) {\n                throw new Error(`\"${field}\" \"${optionComponent}\" not found`)\n              }\n              Component = (\n                <Component {...childProps}>\n                  {map(options, ({ text, value }) => (\n                    <Option key={`${value}${text}`} value={value}>\n                      {text}\n                    </Option>\n                  ))}\n                </Component>\n              )\n            }\n          } else {\n            Component = <Antd.Input />\n          }\n          return (\n            <Antd.Form.Item key={field} {...propsForItem}>\n              {form.getFieldDecorator(field, decorator)(Component)}\n            </Antd.Form.Item>\n          )\n        }}\n      </Context.Consumer>\n    )\n  }\n}\n"],"names":["Context","React","createContext","displayName","compare","form","dep","depValue","get","field","isFunction","pattern","isEqual","getInitialValue","schema","Error","isEmpty","fields","values","decorator","initialValue","set","digValues","result","changedFields","val","name","push","Form","create","value","createFormField","props","onChange","stateHolder","resetFields","depField","schemaFields","formValues","cloneDeep","state","log","setState","setForm","Component","formSetter","FormSetter","context","PureComponent","contextType","dyform","flowRight","antform","DataComponents","Item","ChildElement","children","fieldSetting","find","propsForItem","isValidElement","component","childProps","optionComponent","options","Option","text","Antd.Input","getFieldDecorator"],"mappings":"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"}